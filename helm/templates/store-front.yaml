apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.storeFront.name }}
spec:
  replicas: {{ .Values.storeFront.replicas }}
  selector:
    matchLabels:
      app: {{ .Values.storeFront.name }}
  template:
    metadata:
      labels:
        app: {{ .Values.storeFront.name }}
    spec:
      nodeSelector:
        "kubernetes.io/os": linux
      containers:
        - name: {{ .Values.storeFront.name }}
          image: "{{ .Values.storeFront.image.repository }}:{{ .Values.storeFront.image.tag }}"
          ports:
            - containerPort: {{ .Values.storeFront.service.targetPort }}
              name: {{ .Values.storeFront.name }}
          env:
            - name: VUE_APP_ORDER_SERVICE_URL
              value: {{ .Values.storeFront.env.app_order_service_url }}
            - name: VUE_APP_PRODUCT_SERVICE_URL
              value: {{ .Values.storeFront.env.app_product_service_url }}
          resources:
            requests:
              cpu: 1m
              memory: 200Mi
            limits:
              cpu: 1000m
              memory: 512Mi
          startupProbe:
            httpGet:
              path: /health
              port: {{ .Values.storeFront.service.targetPort }}
            failureThreshold: 3
            initialDelaySeconds: 5
            periodSeconds: 5
          readinessProbe:
            httpGet:
              path: /health
              port: {{ .Values.storeFront.service.targetPort }}
            failureThreshold: 3
            initialDelaySeconds: 3
            periodSeconds: 3
          livenessProbe:
            httpGet:
              path: /health
              port: {{ .Values.storeFront.service.targetPort }}
            failureThreshold: 5
            initialDelaySeconds: 3
            periodSeconds: 3
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Values.storeFront.name }}
spec:
  ports:
    - port: {{ .Values.storeFront.service.port }}
      targetPort: {{ .Values.storeFront.service.targetPort }}
  selector:
    app: {{ .Values.storeFront.name }}
  type: {{ .Values.storeFront.service.type }}