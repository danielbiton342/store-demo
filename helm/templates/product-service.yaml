apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.productService.name }}
spec:
  replicas: {{ .Values.productService.replicas }}
  selector:
    matchLabels:
      app: {{ .Values.productService.name }}
  template:
    metadata:
      labels:
        app: {{ .Values.productService.name }}
    spec:
      nodeSelector:
        "kubernetes.io/os": linux
      containers:
        - name: {{ .Values.productService.name }}
          image: "{{ .Values.productService.image.repository }}:{{ .Values.productService.image.tag }}"
          ports:
            - containerPort: {{ .Values.productService.service.targetPort }}
          resources:
            requests:
              cpu: 1m
              memory: 1Mi
            limits:
              cpu: 2m
              memory: 20Mi
          readinessProbe:
            httpGet:
              path: /health
              port: {{ .Values.productService.service.targetPort }}
            failureThreshold: 3
            initialDelaySeconds: 3
            periodSeconds: 5
          livenessProbe:
            httpGet:
              path: /health
              port: {{ .Values.productService.service.targetPort }}
            failureThreshold: 5
            initialDelaySeconds: 3
            periodSeconds: 3
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Values.productService.name }}
spec:
  type: {{ .Values.productService.service.type }}
  ports:
    - name: http
      port: {{ .Values.productService.service.port }}
      targetPort: {{ .Values.productService.service.targetPort }}
  selector:
    app: {{ .Values.productService.name }}