apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mongodb
spec:
  serviceName: mongodb
  replicas: 1
  selector:
    matchLabels:
      app: mongodb
  template:
    metadata:
      labels:
        app: mongodb
    spec:
      nodeSelector:
        "kubernetes.io/os": linux
      containers:
        - name: mongodb
          image: mcr.microsoft.com/mirror/docker/library/mongo:4.2
          ports:
            - containerPort: 27017
              name: mongodb
          resources:
            requests:
              cpu: 5m
              memory: 75Mi
            limits:
              cpu: 25m
              memory: 1024Mi
          livenessProbe:
            exec:
              command:
                - mongosh
                - --eval
                - db.runCommand('ping').ok
            initialDelaySeconds: 5
            periodSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: mongodb
spec:
  ports:
    - port: 27017
  selector:
    app: mongodb
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: order-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app: order-service
  template:
    metadata:
      labels:
        app: order-service
    spec:
      nodeSelector:
        "kubernetes.io/os": linux
      containers:
        - name: order-service
          image: myacrdemo.azurecr.io/order-service:v1
          ports:
            - containerPort: 3000
          env:
            - name: ORDER_QUEUE_HOSTNAME
              value: "sb-store-demo-114.servicebus.windows.net"
            - name: ORDER_QUEUE_PORT
              value: "5671"
            - name: ORDER_QUEUE_TRANSPORT
              value: "tls"
            - name: ORDER_QUEUE_USERNAME
              value: "sender"
            - name: ORDER_QUEUE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: sender-password-secret
                  key: kv-sender-password
            - name: ORDER_QUEUE_NAME
              value: "orders"
            - name: FASTIFY_ADDRESS
              value: "0.0.0.0"
          volumeMounts:
            - name: secrets-store-inline
              mountPath: "/mnt/secrets-store"
              readOnly: true
          resources:
            requests:
              cpu: 1m
              memory: 50Mi
            limits:
              cpu: 75m
              memory: 128Mi
      volumes:
        - name: secrets-store-inline
          csi:
            driver: secrets-store.csi.k8s.io
            readOnly: true
            volumeAttributes:
              secretProviderClass: "sc-demo-keyvault-csi"
---
apiVersion: v1
kind: Service
metadata:
  name: order-service
spec:
  type: ClusterIP
  ports:
    - name: http
      port: 3000
      targetPort: 3000
  selector:
    app: order-service
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: makeline-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app: makeline-service
  template:
    metadata:
      labels:
        app: makeline-service
    spec:
      nodeSelector:
        "kubernetes.io/os": linux
      containers:
        - name: makeline-service
          image: myacrdemo.azurecr.io/makeline-service:v1
          ports:
            - containerPort: 3001
          env:
            - name: ORDER_QUEUE_URI
              valueFrom:
                secretKeyRef:
                  name: retreiver-uri-secret
                  key: kv-retreiver-uri
            - name: ORDER_QUEUE_USERNAME
              value: "retreiver"
            - name: ORDER_QUEUE_PASSWORD_MAKELINE
              valueFrom:
                secretKeyRef:
                  name: retreiver-password-secret
                  key: kv-retreiver-password
            - name: ORDER_QUEUE_NAME
              value: "orders"
            - name: ORDER_DB_URI
              value: "mongodb://mongodb:27017"
            - name: ORDER_DB_NAME
              value: "orderdb"
            - name: ORDER_DB_COLLECTION_NAME
              value: "orders"
          volumeMounts:
            - name: secrets-store-inline
              mountPath: "/mnt/secrets-store"
              readOnly: true
          resources:
            requests:
              cpu: 1m
              memory: 6Mi
            limits:
              cpu: 5m
              memory: 20Mi
          startupProbe:
            httpGet:
              path: /health
              port: 3001
            failureThreshold: 10
            periodSeconds: 5
          readinessProbe:
            httpGet:
              path: /health
              port: 3001
            failureThreshold: 3
            initialDelaySeconds: 3
            periodSeconds: 5
          livenessProbe:
            httpGet:
              path: /health
              port: 3001
            failureThreshold: 5
            initialDelaySeconds: 3
            periodSeconds: 3
      volumes:
        - name: secrets-store-inline
          csi:
            driver: secrets-store.csi.k8s.io
            readOnly: true
            volumeAttributes:
              secretProviderClass: "sc-demo-keyvault-csi"
---
apiVersion: v1
kind: Service
metadata:
  name: makeline-service
spec:
  type: ClusterIP
  ports:
    - name: http
      port: 3001
      targetPort: 3001
  selector:
    app: makeline-service
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: product-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app: product-service
  template:
    metadata:
      labels:
        app: product-service
    spec:
      nodeSelector:
        "kubernetes.io/os": linux
      containers:
        - name: product-service
          image: myacrdemo.azurecr.io/product-service:v1
          ports:
            - containerPort: 3002
          env:
            - name: AI_SERVICE_URL
              value: "http://ai-service:5001/"
          resources:
            requests:
              cpu: 1m
              memory: 1Mi
            limits:
              cpu: 2m
              memory: 20Mi
          readinessProbe:
            httpGet:
              path: /health
              port: 3002
            failureThreshold: 3
            initialDelaySeconds: 3
            periodSeconds: 5
          livenessProbe:
            httpGet:
              path: /health
              port: 3002
            failureThreshold: 5
            initialDelaySeconds: 3
            periodSeconds: 3
---
apiVersion: v1
kind: Service
metadata:
  name: product-service
spec:
  type: ClusterIP
  ports:
    - name: http
      port: 3002
      targetPort: 3002
  selector:
    app: product-service
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: store-front
spec:
  replicas: 1
  selector:
    matchLabels:
      app: store-front
  template:
    metadata:
      labels:
        app: store-front
    spec:
      nodeSelector:
        "kubernetes.io/os": linux
      containers:
        - name: store-front
          image: myacrdemo.azurecr.io/store-front:v1
          ports:
            - containerPort: 8080
              name: store-front
          env:
            - name: VUE_APP_ORDER_SERVICE_URL
              value: "http://order-service:3000/"
            - name: VUE_APP_PRODUCT_SERVICE_URL
              value: "http://product-service:3002/"
          resources:
            requests:
              cpu: 1m
              memory: 200Mi
            limits:
              cpu: 1000m
              memory: 512Mi
          startupProbe:
            httpGet:
              path: /health
              port: 8080
            failureThreshold: 3
            initialDelaySeconds: 5
            periodSeconds: 5
          readinessProbe:
            httpGet:
              path: /health
              port: 8080
            failureThreshold: 3
            initialDelaySeconds: 3
            periodSeconds: 3
          livenessProbe:
            httpGet:
              path: /health
              port: 8080
            failureThreshold: 5
            initialDelaySeconds: 3
            periodSeconds: 3
---
apiVersion: v1
kind: Service
metadata:
  name: store-front
spec:
  ports:
    - port: 80
      targetPort: 8080
  selector:
    app: store-front
  type: LoadBalancer
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: store-admin
spec:
  replicas: 1
  selector:
    matchLabels:
      app: store-admin
  template:
    metadata:
      labels:
        app: store-admin
    spec:
      nodeSelector:
        "kubernetes.io/os": linux
      containers:
        - name: store-admin
          image: myacrdemo.azurecr.io/store-admin:v1
          ports:
            - containerPort: 8081
              name: store-admin
          env:
            - name: VUE_APP_PRODUCT_SERVICE_URL
              value: "http://product-service:3002/"
            - name: VUE_APP_MAKELINE_SERVICE_URL
              value: "http://makeline-service:3001/"
          resources:
            requests:
              cpu: 1m
              memory: 200Mi
            limits:
              cpu: 1000m
              memory: 512Mi
          startupProbe:
            httpGet:
              path: /health
              port: 8081
            failureThreshold: 3
            initialDelaySeconds: 5
            periodSeconds: 5
          readinessProbe:
            httpGet:
              path: /health
              port: 8081
            failureThreshold: 3
            initialDelaySeconds: 3
            periodSeconds: 5
          livenessProbe:
            httpGet:
              path: /health
              port: 8081
            failureThreshold: 5
            initialDelaySeconds: 3
            periodSeconds: 3
---
apiVersion: v1
kind: Service
metadata:
  name: store-admin
spec:
  ports:
    - port: 80
      targetPort: 8081
  selector:
    app: store-admin
  type: LoadBalancer
